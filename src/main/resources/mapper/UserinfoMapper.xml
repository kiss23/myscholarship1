<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jxufe.myscholarship.mapper.UserService">
    <resultMap id="BaseResultMap" type="com.jxufe.myscholarship.model.User">
        <id column="studentNumber" jdbcType="INTEGER" property="studentnumber" />
        <result column="userName" jdbcType="VARCHAR" property="username" />
        <result column="major" jdbcType="VARCHAR" property="major" />
        <result column="password" jdbcType="VARCHAR" property="password" />
        <result column="schoolYear" jdbcType="INTEGER" property="schoolyear" />
        <result column="courseWeight" jdbcType="REAL" property="courseweight" />
        <result column="paperScore" jdbcType="REAL" property="paperscore" />
        <result column="researchSubject" jdbcType="REAL" property="researchsubject" />
        <result column="technologicalInvention" jdbcType="REAL" property="technologicalinvention" />
        <result column="professionalSkill" jdbcType="REAL" property="professionalskill" />
        <result column="scientificResearchScore" jdbcType="REAL" property="scientificresearchscore" />
        <result column="subjectNature" jdbcType="REAL" property="subjectnature" />
        <result column="honorAward" jdbcType="REAL" property="honoraward" />
        <result column="studentWork" jdbcType="REAL" property="studentwork" />
        <result column="professionalSkillScore" jdbcType="REAL" property="professionalskillscore" />
        <result column="comprehensiveQuality" jdbcType="REAL" property="comprehensivequality" />
        <result column="sixGrades" jdbcType="INTEGER" property="sixgrades" />
        <result column="finalGrades" jdbcType="REAL" property="finalgrades" />
        <result column="content" jdbcType="VARCHAR" property="content" />
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    studentNumber, userName, major, password, schoolYear, courseWeight, paperScore, researchSubject,
    technologicalInvention, professionalSkill, scientificResearchScore, subjectNature,
    honorAward, studentWork, professionalSkillScore, comprehensiveQuality, sixGrades,
    finalGrades, content
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from userinfo
        where studentNumber = #{studentnumber,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from userinfo
    where studentNumber = #{studentnumber,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.jxufe.myscholarship.model.User">
    insert into userinfo (studentNumber, userName, major,
      password, schoolYear, courseWeight,
      paperScore, researchSubject, technologicalInvention,
      professionalSkill, scientificResearchScore, subjectNature,
      honorAward, studentWork, professionalSkillScore,
      comprehensiveQuality, sixGrades, finalGrades,
      content)
    values (#{studentnumber,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{major,jdbcType=VARCHAR},
      #{password,jdbcType=VARCHAR}, #{schoolyear,jdbcType=INTEGER}, #{courseweight,jdbcType=REAL},
      #{paperscore,jdbcType=REAL}, #{researchsubject,jdbcType=REAL}, #{technologicalinvention,jdbcType=REAL},
      #{professionalskill,jdbcType=REAL}, #{scientificresearchscore,jdbcType=REAL}, #{subjectnature,jdbcType=REAL},
      #{honoraward,jdbcType=REAL}, #{studentwork,jdbcType=REAL}, #{professionalskillscore,jdbcType=REAL},
      #{comprehensivequality,jdbcType=REAL}, #{sixgrades,jdbcType=INTEGER}, #{finalgrades,jdbcType=REAL},
      #{content,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.jxufe.myscholarship.model.User">
        insert into userinfo
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="studentnumber != null">
                studentNumber,
            </if>
            <if test="username != null">
                userName,
            </if>
            <if test="major != null">
                major,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="schoolyear != null">
                schoolYear,
            </if>
            <if test="courseweight != null">
                courseWeight,
            </if>
            <if test="paperscore != null">
                paperScore,
            </if>
            <if test="researchsubject != null">
                researchSubject,
            </if>
            <if test="technologicalinvention != null">
                technologicalInvention,
            </if>
            <if test="professionalskill != null">
                professionalSkill,
            </if>
            <if test="scientificresearchscore != null">
                scientificResearchScore,
            </if>
            <if test="subjectnature != null">
                subjectNature,
            </if>
            <if test="honoraward != null">
                honorAward,
            </if>
            <if test="studentwork != null">
                studentWork,
            </if>
            <if test="professionalskillscore != null">
                professionalSkillScore,
            </if>
            <if test="comprehensivequality != null">
                comprehensiveQuality,
            </if>
            <if test="sixgrades != null">
                sixGrades,
            </if>
            <if test="finalgrades != null">
                finalGrades,
            </if>
            <if test="content != null">
                content,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="studentnumber != null">
                #{studentnumber,jdbcType=INTEGER},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="major != null">
                #{major,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="schoolyear != null">
                #{schoolyear,jdbcType=INTEGER},
            </if>
            <if test="courseweight != null">
                #{courseweight,jdbcType=REAL},
            </if>
            <if test="paperscore != null">
                #{paperscore,jdbcType=REAL},
            </if>
            <if test="researchsubject != null">
                #{researchsubject,jdbcType=REAL},
            </if>
            <if test="technologicalinvention != null">
                #{technologicalinvention,jdbcType=REAL},
            </if>
            <if test="professionalskill != null">
                #{professionalskill,jdbcType=REAL},
            </if>
            <if test="scientificresearchscore != null">
                #{scientificresearchscore,jdbcType=REAL},
            </if>
            <if test="subjectnature != null">
                #{subjectnature,jdbcType=REAL},
            </if>
            <if test="honoraward != null">
                #{honoraward,jdbcType=REAL},
            </if>
            <if test="studentwork != null">
                #{studentwork,jdbcType=REAL},
            </if>
            <if test="professionalskillscore != null">
                #{professionalskillscore,jdbcType=REAL},
            </if>
            <if test="comprehensivequality != null">
                #{comprehensivequality,jdbcType=REAL},
            </if>
            <if test="sixgrades != null">
                #{sixgrades,jdbcType=INTEGER},
            </if>
            <if test="finalgrades != null">
                #{finalgrades,jdbcType=REAL},
            </if>
            <if test="content != null">
                #{content,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByExampleSelective" parameterType="map">
        update userinfo
        <set>
            <if test="record.studentnumber != null">
                studentNumber = #{record.studentnumber,jdbcType=INTEGER},
            </if>
            <if test="record.username != null">
                userName = #{record.username,jdbcType=VARCHAR},
            </if>
            <if test="record.major != null">
                major = #{record.major,jdbcType=VARCHAR},
            </if>
            <if test="record.password != null">
                password = #{record.password,jdbcType=VARCHAR},
            </if>
            <if test="record.schoolyear != null">
                schoolYear = #{record.schoolyear,jdbcType=INTEGER},
            </if>
            <if test="record.courseweight != null">
                courseWeight = #{record.courseweight,jdbcType=REAL},
            </if>
            <if test="record.paperscore != null">
                paperScore = #{record.paperscore,jdbcType=REAL},
            </if>
            <if test="record.researchsubject != null">
                researchSubject = #{record.researchsubject,jdbcType=REAL},
            </if>
            <if test="record.technologicalinvention != null">
                technologicalInvention = #{record.technologicalinvention,jdbcType=REAL},
            </if>
            <if test="record.professionalskill != null">
                professionalSkill = #{record.professionalskill,jdbcType=REAL},
            </if>
            <if test="record.scientificresearchscore != null">
                scientificResearchScore = #{record.scientificresearchscore,jdbcType=REAL},
            </if>
            <if test="record.subjectnature != null">
                subjectNature = #{record.subjectnature,jdbcType=REAL},
            </if>
            <if test="record.honoraward != null">
                honorAward = #{record.honoraward,jdbcType=REAL},
            </if>
            <if test="record.studentwork != null">
                studentWork = #{record.studentwork,jdbcType=REAL},
            </if>
            <if test="record.professionalskillscore != null">
                professionalSkillScore = #{record.professionalskillscore,jdbcType=REAL},
            </if>
            <if test="record.comprehensivequality != null">
                comprehensiveQuality = #{record.comprehensivequality,jdbcType=REAL},
            </if>
            <if test="record.sixgrades != null">
                sixGrades = #{record.sixgrades,jdbcType=INTEGER},
            </if>
            <if test="record.finalgrades != null">
                finalGrades = #{record.finalgrades,jdbcType=REAL},
            </if>
            <if test="record.content != null">
                content = #{record.content,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update userinfo
        set studentNumber = #{record.studentnumber,jdbcType=INTEGER},
        userName = #{record.username,jdbcType=VARCHAR},
        major = #{record.major,jdbcType=VARCHAR},
        password = #{record.password,jdbcType=VARCHAR},
        schoolYear = #{record.schoolyear,jdbcType=INTEGER},
        courseWeight = #{record.courseweight,jdbcType=REAL},
        paperScore = #{record.paperscore,jdbcType=REAL},
        researchSubject = #{record.researchsubject,jdbcType=REAL},
        technologicalInvention = #{record.technologicalinvention,jdbcType=REAL},
        professionalSkill = #{record.professionalskill,jdbcType=REAL},
        scientificResearchScore = #{record.scientificresearchscore,jdbcType=REAL},
        subjectNature = #{record.subjectnature,jdbcType=REAL},
        honorAward = #{record.honoraward,jdbcType=REAL},
        studentWork = #{record.studentwork,jdbcType=REAL},
        professionalSkillScore = #{record.professionalskillscore,jdbcType=REAL},
        comprehensiveQuality = #{record.comprehensivequality,jdbcType=REAL},
        sixGrades = #{record.sixgrades,jdbcType=INTEGER},
        finalGrades = #{record.finalgrades,jdbcType=REAL},
        content = #{record.content,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.jxufe.myscholarship.model.User">
        update userinfo
        <set>
            <if test="username != null">
                userName = #{username,jdbcType=VARCHAR},
            </if>
            <if test="major != null">
                major = #{major,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="schoolyear != null">
                schoolYear = #{schoolyear,jdbcType=INTEGER},
            </if>
            <if test="courseweight != null">
                courseWeight = #{courseweight,jdbcType=REAL},
            </if>
            <if test="paperscore != null">
                paperScore = #{paperscore,jdbcType=REAL},
            </if>
            <if test="researchsubject != null">
                researchSubject = #{researchsubject,jdbcType=REAL},
            </if>
            <if test="technologicalinvention != null">
                technologicalInvention = #{technologicalinvention,jdbcType=REAL},
            </if>
            <if test="professionalskill != null">
                professionalSkill = #{professionalskill,jdbcType=REAL},
            </if>
            <if test="scientificresearchscore != null">
                scientificResearchScore = #{scientificresearchscore,jdbcType=REAL},
            </if>
            <if test="subjectnature != null">
                subjectNature = #{subjectnature,jdbcType=REAL},
            </if>
            <if test="honoraward != null">
                honorAward = #{honoraward,jdbcType=REAL},
            </if>
            <if test="studentwork != null">
                studentWork = #{studentwork,jdbcType=REAL},
            </if>
            <if test="professionalskillscore != null">
                professionalSkillScore = #{professionalskillscore,jdbcType=REAL},
            </if>
            <if test="comprehensivequality != null">
                comprehensiveQuality = #{comprehensivequality,jdbcType=REAL},
            </if>
            <if test="sixgrades != null">
                sixGrades = #{sixgrades,jdbcType=INTEGER},
            </if>
            <if test="finalgrades != null">
                finalGrades = #{finalgrades,jdbcType=REAL},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=VARCHAR},
            </if>
        </set>
        where studentNumber = #{studentnumber,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.jxufe.myscholarship.model.User">
    update userinfo
    set userName = #{username,jdbcType=VARCHAR},
      major = #{major,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      schoolYear = #{schoolyear,jdbcType=INTEGER},
      courseWeight = #{courseweight,jdbcType=REAL},
      paperScore = #{paperscore,jdbcType=REAL},
      researchSubject = #{researchsubject,jdbcType=REAL},
      technologicalInvention = #{technologicalinvention,jdbcType=REAL},
      professionalSkill = #{professionalskill,jdbcType=REAL},
      scientificResearchScore = #{scientificresearchscore,jdbcType=REAL},
      subjectNature = #{subjectnature,jdbcType=REAL},
      honorAward = #{honoraward,jdbcType=REAL},
      studentWork = #{studentwork,jdbcType=REAL},
      professionalSkillScore = #{professionalskillscore,jdbcType=REAL},
      comprehensiveQuality = #{comprehensivequality,jdbcType=REAL},
      sixGrades = #{sixgrades,jdbcType=INTEGER},
      finalGrades = #{finalgrades,jdbcType=REAL},
      content = #{content,jdbcType=VARCHAR}
    where studentNumber = #{studentnumber,jdbcType=INTEGER}
  </update>
</mapper>